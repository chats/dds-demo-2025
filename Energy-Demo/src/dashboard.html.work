<!DOCTYPE html>
<html>
<head>
    <title>Power Plant Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body { background: #f0f2f5; font-family: Arial, sans-serif; }
        .controls {
            padding: 20px;
            background: white;
            margin: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            padding: 20px;
        }
        .card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .data-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        .data-table th, .data-table td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        .filter-group {
            display: inline-block;
            margin-right: 20px;
        }
    </style>
</head>
<body>
    <div class="controls">
        <div class="filter-group">
            <label>Plant Type:</label>
            <select id="typeFilter">
                <option value="ALL">All Types</option>
                <option value="WIND">Wind</option>
                <option value="SOLAR">Solar</option>
            </select>
        </div>
        <div class="filter-group">
            <label>Plant:</label>
            <select id="plantFilter">
                <option value="ALL">All Plants</option>
            </select>
        </div>
    </div>

    <div class="grid">
        <div class="card">
            <h2>Real-time Power Output</h2>
            <canvas id="powerChart"></canvas>
        </div>
        <div class="card">
            <h2>Total Energy Production</h2>
            <canvas id="energyChart"></canvas>
        </div>
    </div>

    <div class="card">
        <h2>Plants Data</h2>
        <table class="data-table" id="plantsTable">
            <thead>
                <tr>
                    <th>Plant ID</th>
                    <th>Type</th>
                    <th>Location</th>
                    <th>Power (kW)</th>
                    <th>Energy (kWh)</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <script>
        let powerChart, energyChart;
        let plantsData = new Map();
        let plantIds = new Set();

        const powerData = {
            labels: [],
            datasets: []
        };

        const energyData = {
            labels: ['Wind', 'Solar'],
            datasets: [{
                label: 'Total Energy (kWh)',
                data: [0, 0],
                backgroundColor: ['#36A2EB', '#FFCD56']
            }]
        };

        function initCharts() {
            const powerCtx = document.getElementById('powerChart').getContext('2d');
            powerChart = new Chart(powerCtx, {
                type: 'line',
                data: powerData,
                options: {
                    responsive: true,
                    animation: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            const energyCtx = document.getElementById('energyChart').getContext('2d');
            energyChart = new Chart(energyCtx, {
                type: 'bar',
                data: energyData,
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        function updatePlantFilter(data) {
            if (!plantIds.has(data.plant_id)) {
                plantIds.add(data.plant_id);
                const plantFilter = document.getElementById('plantFilter');
                const option = document.createElement('option');
                option.value = data.plant_id;
                option.textContent = data.plant_id;
                plantFilter.appendChild(option);

                // Add new dataset for this plant
                powerData.datasets.push({
                    label: data.plant_id,
                    data: [],
                    borderColor: getRandomColor(),
                    tension: 0.1
                });
            }
        }

        function getRandomColor() {
            const letters = '0123456789ABCDEF';
            let color = '#';
            for (let i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

        function updateData(data) {
            plantsData.set(data.plant_id, data);
            updatePlantFilter(data);
            refreshDisplay();
        }

        function refreshDisplay() {
            const typeFilter = document.getElementById('typeFilter').value;
            const plantFilter = document.getElementById('plantFilter').value;
            const tbody = document.querySelector('#plantsTable tbody');
            tbody.innerHTML = '';

            let windEnergy = 0;
            let solarEnergy = 0;

            // Update table and calculate totals
            plantsData.forEach(data => {
                if ((typeFilter === 'ALL' || data.type === typeFilter) &&
                    (plantFilter === 'ALL' || data.plant_id === plantFilter)) {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${data.plant_id}</td>
                        <td>${data.type}</td>
                        <td>${data.location}</td>
                        <td>${data.power.toFixed(2)}</td>
                        <td>${data.energy.toFixed(2)}</td>
                    `;
                    tbody.appendChild(row);
                }

                if (data.type === 'WIND') {
                    windEnergy += data.energy;
                } else if (data.type === 'SOLAR') {
                    solarEnergy += data.energy;
                }
            });

            // Update energy chart
            energyData.datasets[0].data = [windEnergy, solarEnergy];
            energyChart.update();

            // Update power chart
            const now = new Date().toLocaleTimeString();
            powerData.labels.push(now);
            if (powerData.labels.length > 10) {
                powerData.labels.shift();
            }

            powerData.datasets.forEach(dataset => {
                const plantData = plantsData.get(dataset.label);
                if (plantData && 
                    (typeFilter === 'ALL' || plantData.type === typeFilter) &&
                    (plantFilter === 'ALL' || plantData.plant_id === plantFilter)) {
                    dataset.data.push(plantData.power);
                    if (dataset.data.length > 10) {
                        dataset.data.shift();
                    }
                }
            });
            powerChart.update();
        }

        const ws = new WebSocket('ws://localhost:8080/energy-data');
        
        ws.onopen = () => {
            console.log('Connected to WebSocket server');
            initCharts();
        };
        
        /*
        ws.onmessage = (event) => {
            try {
                const data = JSON.parse(event.data);
                updateData(data);
            } catch (e) {
                console.error('Error parsing data:', e);
            }
        };
        */
        ws.onmessage = (event) => {
            try {
                const dataArray = JSON.parse(event.data);
                //console.log(dataArray);
                dataArray.forEach(data => {
                    updateData(data);
                    //console.log(data);
                });
            } catch (e) {
                console.error('Error parsing data:', e);
            }
        };

        // Event listeners for filters
        document.getElementById('typeFilter').addEventListener('change', refreshDisplay);
        document.getElementById('plantFilter').addEventListener('change', refreshDisplay);
    </script>
</body>
</html>