#include "dds/dds.h"
#include "PowerPlantData.h"
#include <libwebsockets.h>
#include <jansson.h>
#include <string.h>
#include <signal.h>

static struct lws_context *context;
static struct lws *client_wsi;
static volatile bool running = true;

// WebSocket setup and callbacks
static int callback_power_data(struct lws *wsi, enum lws_callback_reasons reason,
                           void *user, void *in, size_t len) {
    return 0;
}

// Convert DDS data to JSON
char* create_json_message(PowerPlant_EnergyData *data) {
    json_t *root = json_object();
    json_object_set_new(root, "plant_id", json_string(data->plant_id));
    json_object_set_new(root, "type", json_string(data->type == PowerPlant_WIND ? "WIND" : "SOLAR"));
    json_object_set_new(root, "location", json_string(data->location.name));
    json_object_set_new(root, "power", json_real(data->power_output));
    json_object_set_new(root, "energy", json_real(data->daily_energy));
    
    char *json_str = json_dumps(root, JSON_COMPACT);
    json_decref(root);
    return json_str;
}